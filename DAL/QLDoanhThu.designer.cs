#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanLyDoanhThu")]
	public partial class QLDoanhThuDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertStyle(Style instance);
    partial void UpdateStyle(Style instance);
    partial void DeleteStyle(Style instance);
    partial void InsertCTDT(CTDT instance);
    partial void UpdateCTDT(CTDT instance);
    partial void DeleteCTDT(CTDT instance);
    partial void InsertChiPhi(ChiPhi instance);
    partial void UpdateChiPhi(ChiPhi instance);
    partial void DeleteChiPhi(ChiPhi instance);
    partial void InsertFac(Fac instance);
    partial void UpdateFac(Fac instance);
    partial void DeleteFac(Fac instance);
    partial void InsertLine(Line instance);
    partial void UpdateLine(Line instance);
    partial void DeleteLine(Line instance);
    #endregion
		
		public QLDoanhThuDataContext() : 
				base(global::DAL.Properties.Settings.Default.QuanLyDoanhThuConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLDoanhThuDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLDoanhThuDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLDoanhThuDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLDoanhThuDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<Style> Styles
		{
			get
			{
				return this.GetTable<Style>();
			}
		}
		
		public System.Data.Linq.Table<CTDT> CTDTs
		{
			get
			{
				return this.GetTable<CTDT>();
			}
		}
		
		public System.Data.Linq.Table<ChiPhi> ChiPhis
		{
			get
			{
				return this.GetTable<ChiPhi>();
			}
		}
		
		public System.Data.Linq.Table<Fac> Facs
		{
			get
			{
				return this.GetTable<Fac>();
			}
		}
		
		public System.Data.Linq.Table<Line> Lines
		{
			get
			{
				return this.GetTable<Line>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserName;
		
		private string _Password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public Account()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(20)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Style")]
	public partial class Style : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<decimal> _DonGia;
		
		private System.Nullable<System.DateTime> _Ngay;
		
		private string _TinhTrang;
		
		private string _IDLine;
		
		private EntitySet<CTDT> _CTDTs;
		
		private EntityRef<Line> _Line;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnDonGiaChanging(System.Nullable<decimal> value);
    partial void OnDonGiaChanged();
    partial void OnNgayChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    partial void OnIDLineChanging(string value);
    partial void OnIDLineChanged();
    #endregion
		
		public Style()
		{
			this._CTDTs = new EntitySet<CTDT>(new Action<CTDT>(this.attach_CTDTs), new Action<CTDT>(this.detach_CTDTs));
			this._Line = default(EntityRef<Line>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngay", DbType="Date")]
		public System.Nullable<System.DateTime> Ngay
		{
			get
			{
				return this._Ngay;
			}
			set
			{
				if ((this._Ngay != value))
				{
					this.OnNgayChanging(value);
					this.SendPropertyChanging();
					this._Ngay = value;
					this.SendPropertyChanged("Ngay");
					this.OnNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="VarChar(10)")]
		public string TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLine", DbType="VarChar(10)")]
		public string IDLine
		{
			get
			{
				return this._IDLine;
			}
			set
			{
				if ((this._IDLine != value))
				{
					if (this._Line.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLineChanging(value);
					this.SendPropertyChanging();
					this._IDLine = value;
					this.SendPropertyChanged("IDLine");
					this.OnIDLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Style_CTDT", Storage="_CTDTs", ThisKey="ID", OtherKey="IDStype")]
		public EntitySet<CTDT> CTDTs
		{
			get
			{
				return this._CTDTs;
			}
			set
			{
				this._CTDTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Line_Style", Storage="_Line", ThisKey="IDLine", OtherKey="IDLine", IsForeignKey=true)]
		public Line Line
		{
			get
			{
				return this._Line.Entity;
			}
			set
			{
				Line previousValue = this._Line.Entity;
				if (((previousValue != value) 
							|| (this._Line.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Line.Entity = null;
						previousValue.Styles.Remove(this);
					}
					this._Line.Entity = value;
					if ((value != null))
					{
						value.Styles.Add(this);
						this._IDLine = value.IDLine;
					}
					else
					{
						this._IDLine = default(string);
					}
					this.SendPropertyChanged("Line");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTDTs(CTDT entity)
		{
			this.SendPropertyChanging();
			entity.Style = this;
		}
		
		private void detach_CTDTs(CTDT entity)
		{
			this.SendPropertyChanging();
			entity.Style = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTDT")]
	public partial class CTDT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _Ngay;
		
		private string _DVT;
		
		private System.Nullable<int> _IDChiPhi;
		
		private string _IDStype;
		
		private System.Nullable<int> _SoLuong;
		
		private string _TinhTrang;
		
		private System.Nullable<int> _DTL1;
		
		private System.Nullable<int> _DTL2;
		
		private System.Nullable<int> _DTL3;
		
		private System.Nullable<int> _DTL4;
		
		private System.Nullable<int> _DTL5;
		
		private System.Nullable<int> _DTL6;
		
		private System.Nullable<int> _DTL7;
		
		private System.Nullable<int> _DTL8;
		
		private System.Nullable<int> _DTOverTime;
		
		private System.Nullable<int> _MucTieu;
		
		private System.Nullable<System.TimeSpan> _GioBD;
		
		private EntityRef<Style> _Style;
		
		private EntityRef<ChiPhi> _ChiPhi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNgayChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayChanged();
    partial void OnDVTChanging(string value);
    partial void OnDVTChanged();
    partial void OnIDChiPhiChanging(System.Nullable<int> value);
    partial void OnIDChiPhiChanged();
    partial void OnIDStypeChanging(string value);
    partial void OnIDStypeChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    partial void OnDTL1Changing(System.Nullable<int> value);
    partial void OnDTL1Changed();
    partial void OnDTL2Changing(System.Nullable<int> value);
    partial void OnDTL2Changed();
    partial void OnDTL3Changing(System.Nullable<int> value);
    partial void OnDTL3Changed();
    partial void OnDTL4Changing(System.Nullable<int> value);
    partial void OnDTL4Changed();
    partial void OnDTL5Changing(System.Nullable<int> value);
    partial void OnDTL5Changed();
    partial void OnDTL6Changing(System.Nullable<int> value);
    partial void OnDTL6Changed();
    partial void OnDTL7Changing(System.Nullable<int> value);
    partial void OnDTL7Changed();
    partial void OnDTL8Changing(System.Nullable<int> value);
    partial void OnDTL8Changed();
    partial void OnDTOverTimeChanging(System.Nullable<int> value);
    partial void OnDTOverTimeChanged();
    partial void OnMucTieuChanging(System.Nullable<int> value);
    partial void OnMucTieuChanged();
    partial void OnGioBDChanging(System.Nullable<System.TimeSpan> value);
    partial void OnGioBDChanged();
    #endregion
		
		public CTDT()
		{
			this._Style = default(EntityRef<Style>);
			this._ChiPhi = default(EntityRef<ChiPhi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngay", DbType="Date")]
		public System.Nullable<System.DateTime> Ngay
		{
			get
			{
				return this._Ngay;
			}
			set
			{
				if ((this._Ngay != value))
				{
					this.OnNgayChanging(value);
					this.SendPropertyChanging();
					this._Ngay = value;
					this.SendPropertyChanged("Ngay");
					this.OnNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVT", DbType="VarChar(3)")]
		public string DVT
		{
			get
			{
				return this._DVT;
			}
			set
			{
				if ((this._DVT != value))
				{
					this.OnDVTChanging(value);
					this.SendPropertyChanging();
					this._DVT = value;
					this.SendPropertyChanged("DVT");
					this.OnDVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDChiPhi", DbType="Int")]
		public System.Nullable<int> IDChiPhi
		{
			get
			{
				return this._IDChiPhi;
			}
			set
			{
				if ((this._IDChiPhi != value))
				{
					if (this._ChiPhi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChiPhiChanging(value);
					this.SendPropertyChanging();
					this._IDChiPhi = value;
					this.SendPropertyChanged("IDChiPhi");
					this.OnIDChiPhiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStype", DbType="VarChar(20)")]
		public string IDStype
		{
			get
			{
				return this._IDStype;
			}
			set
			{
				if ((this._IDStype != value))
				{
					if (this._Style.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDStypeChanging(value);
					this.SendPropertyChanging();
					this._IDStype = value;
					this.SendPropertyChanged("IDStype");
					this.OnIDStypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="VarChar(10)")]
		public string TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTL1", DbType="Int")]
		public System.Nullable<int> DTL1
		{
			get
			{
				return this._DTL1;
			}
			set
			{
				if ((this._DTL1 != value))
				{
					this.OnDTL1Changing(value);
					this.SendPropertyChanging();
					this._DTL1 = value;
					this.SendPropertyChanged("DTL1");
					this.OnDTL1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTL2", DbType="Int")]
		public System.Nullable<int> DTL2
		{
			get
			{
				return this._DTL2;
			}
			set
			{
				if ((this._DTL2 != value))
				{
					this.OnDTL2Changing(value);
					this.SendPropertyChanging();
					this._DTL2 = value;
					this.SendPropertyChanged("DTL2");
					this.OnDTL2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTL3", DbType="Int")]
		public System.Nullable<int> DTL3
		{
			get
			{
				return this._DTL3;
			}
			set
			{
				if ((this._DTL3 != value))
				{
					this.OnDTL3Changing(value);
					this.SendPropertyChanging();
					this._DTL3 = value;
					this.SendPropertyChanged("DTL3");
					this.OnDTL3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTL4", DbType="Int")]
		public System.Nullable<int> DTL4
		{
			get
			{
				return this._DTL4;
			}
			set
			{
				if ((this._DTL4 != value))
				{
					this.OnDTL4Changing(value);
					this.SendPropertyChanging();
					this._DTL4 = value;
					this.SendPropertyChanged("DTL4");
					this.OnDTL4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTL5", DbType="Int")]
		public System.Nullable<int> DTL5
		{
			get
			{
				return this._DTL5;
			}
			set
			{
				if ((this._DTL5 != value))
				{
					this.OnDTL5Changing(value);
					this.SendPropertyChanging();
					this._DTL5 = value;
					this.SendPropertyChanged("DTL5");
					this.OnDTL5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTL6", DbType="Int")]
		public System.Nullable<int> DTL6
		{
			get
			{
				return this._DTL6;
			}
			set
			{
				if ((this._DTL6 != value))
				{
					this.OnDTL6Changing(value);
					this.SendPropertyChanging();
					this._DTL6 = value;
					this.SendPropertyChanged("DTL6");
					this.OnDTL6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTL7", DbType="Int")]
		public System.Nullable<int> DTL7
		{
			get
			{
				return this._DTL7;
			}
			set
			{
				if ((this._DTL7 != value))
				{
					this.OnDTL7Changing(value);
					this.SendPropertyChanging();
					this._DTL7 = value;
					this.SendPropertyChanged("DTL7");
					this.OnDTL7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTL8", DbType="Int")]
		public System.Nullable<int> DTL8
		{
			get
			{
				return this._DTL8;
			}
			set
			{
				if ((this._DTL8 != value))
				{
					this.OnDTL8Changing(value);
					this.SendPropertyChanging();
					this._DTL8 = value;
					this.SendPropertyChanged("DTL8");
					this.OnDTL8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTOverTime", DbType="Int")]
		public System.Nullable<int> DTOverTime
		{
			get
			{
				return this._DTOverTime;
			}
			set
			{
				if ((this._DTOverTime != value))
				{
					this.OnDTOverTimeChanging(value);
					this.SendPropertyChanging();
					this._DTOverTime = value;
					this.SendPropertyChanged("DTOverTime");
					this.OnDTOverTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MucTieu", DbType="Int")]
		public System.Nullable<int> MucTieu
		{
			get
			{
				return this._MucTieu;
			}
			set
			{
				if ((this._MucTieu != value))
				{
					this.OnMucTieuChanging(value);
					this.SendPropertyChanging();
					this._MucTieu = value;
					this.SendPropertyChanged("MucTieu");
					this.OnMucTieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioBD", DbType="Time")]
		public System.Nullable<System.TimeSpan> GioBD
		{
			get
			{
				return this._GioBD;
			}
			set
			{
				if ((this._GioBD != value))
				{
					this.OnGioBDChanging(value);
					this.SendPropertyChanging();
					this._GioBD = value;
					this.SendPropertyChanged("GioBD");
					this.OnGioBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Style_CTDT", Storage="_Style", ThisKey="IDStype", OtherKey="ID", IsForeignKey=true)]
		public Style Style
		{
			get
			{
				return this._Style.Entity;
			}
			set
			{
				Style previousValue = this._Style.Entity;
				if (((previousValue != value) 
							|| (this._Style.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Style.Entity = null;
						previousValue.CTDTs.Remove(this);
					}
					this._Style.Entity = value;
					if ((value != null))
					{
						value.CTDTs.Add(this);
						this._IDStype = value.ID;
					}
					else
					{
						this._IDStype = default(string);
					}
					this.SendPropertyChanged("Style");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChiPhi_CTDT", Storage="_ChiPhi", ThisKey="IDChiPhi", OtherKey="IDChiPhi", IsForeignKey=true)]
		public ChiPhi ChiPhi
		{
			get
			{
				return this._ChiPhi.Entity;
			}
			set
			{
				ChiPhi previousValue = this._ChiPhi.Entity;
				if (((previousValue != value) 
							|| (this._ChiPhi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChiPhi.Entity = null;
						previousValue.CTDTs.Remove(this);
					}
					this._ChiPhi.Entity = value;
					if ((value != null))
					{
						value.CTDTs.Add(this);
						this._IDChiPhi = value.IDChiPhi;
					}
					else
					{
						this._IDChiPhi = default(Nullable<int>);
					}
					this.SendPropertyChanged("ChiPhi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiPhi")]
	public partial class ChiPhi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDChiPhi;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _Ngay;
		
		private System.Nullable<int> _ChiPhi1;
		
		private string _DVT;
		
		private string _TinhTrang;
		
		private string _IDLine;
		
		private System.Nullable<int> _NgayCong;
		
		private System.Nullable<decimal> _MO;
		
		private EntitySet<CTDT> _CTDTs;
		
		private EntityRef<Line> _Line;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChiPhiChanging(int value);
    partial void OnIDChiPhiChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNgayChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayChanged();
    partial void OnChiPhi1Changing(System.Nullable<int> value);
    partial void OnChiPhi1Changed();
    partial void OnDVTChanging(string value);
    partial void OnDVTChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    partial void OnIDLineChanging(string value);
    partial void OnIDLineChanged();
    partial void OnNgayCongChanging(System.Nullable<int> value);
    partial void OnNgayCongChanged();
    partial void OnMOChanging(System.Nullable<decimal> value);
    partial void OnMOChanged();
    #endregion
		
		public ChiPhi()
		{
			this._CTDTs = new EntitySet<CTDT>(new Action<CTDT>(this.attach_CTDTs), new Action<CTDT>(this.detach_CTDTs));
			this._Line = default(EntityRef<Line>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDChiPhi", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDChiPhi
		{
			get
			{
				return this._IDChiPhi;
			}
			set
			{
				if ((this._IDChiPhi != value))
				{
					this.OnIDChiPhiChanging(value);
					this.SendPropertyChanging();
					this._IDChiPhi = value;
					this.SendPropertyChanged("IDChiPhi");
					this.OnIDChiPhiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngay", DbType="Date")]
		public System.Nullable<System.DateTime> Ngay
		{
			get
			{
				return this._Ngay;
			}
			set
			{
				if ((this._Ngay != value))
				{
					this.OnNgayChanging(value);
					this.SendPropertyChanging();
					this._Ngay = value;
					this.SendPropertyChanged("Ngay");
					this.OnNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ChiPhi", Storage="_ChiPhi1", DbType="Int")]
		public System.Nullable<int> ChiPhi1
		{
			get
			{
				return this._ChiPhi1;
			}
			set
			{
				if ((this._ChiPhi1 != value))
				{
					this.OnChiPhi1Changing(value);
					this.SendPropertyChanging();
					this._ChiPhi1 = value;
					this.SendPropertyChanged("ChiPhi1");
					this.OnChiPhi1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVT", DbType="VarChar(3)")]
		public string DVT
		{
			get
			{
				return this._DVT;
			}
			set
			{
				if ((this._DVT != value))
				{
					this.OnDVTChanging(value);
					this.SendPropertyChanging();
					this._DVT = value;
					this.SendPropertyChanged("DVT");
					this.OnDVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="VarChar(10)")]
		public string TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLine", DbType="VarChar(10)")]
		public string IDLine
		{
			get
			{
				return this._IDLine;
			}
			set
			{
				if ((this._IDLine != value))
				{
					if (this._Line.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLineChanging(value);
					this.SendPropertyChanging();
					this._IDLine = value;
					this.SendPropertyChanged("IDLine");
					this.OnIDLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCong", DbType="Int")]
		public System.Nullable<int> NgayCong
		{
			get
			{
				return this._NgayCong;
			}
			set
			{
				if ((this._NgayCong != value))
				{
					this.OnNgayCongChanging(value);
					this.SendPropertyChanging();
					this._NgayCong = value;
					this.SendPropertyChanged("NgayCong");
					this.OnNgayCongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MO", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MO
		{
			get
			{
				return this._MO;
			}
			set
			{
				if ((this._MO != value))
				{
					this.OnMOChanging(value);
					this.SendPropertyChanging();
					this._MO = value;
					this.SendPropertyChanged("MO");
					this.OnMOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChiPhi_CTDT", Storage="_CTDTs", ThisKey="IDChiPhi", OtherKey="IDChiPhi")]
		public EntitySet<CTDT> CTDTs
		{
			get
			{
				return this._CTDTs;
			}
			set
			{
				this._CTDTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Line_ChiPhi", Storage="_Line", ThisKey="IDLine", OtherKey="IDLine", IsForeignKey=true)]
		public Line Line
		{
			get
			{
				return this._Line.Entity;
			}
			set
			{
				Line previousValue = this._Line.Entity;
				if (((previousValue != value) 
							|| (this._Line.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Line.Entity = null;
						previousValue.ChiPhis.Remove(this);
					}
					this._Line.Entity = value;
					if ((value != null))
					{
						value.ChiPhis.Add(this);
						this._IDLine = value.IDLine;
					}
					else
					{
						this._IDLine = default(string);
					}
					this.SendPropertyChanged("Line");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTDTs(CTDT entity)
		{
			this.SendPropertyChanging();
			entity.ChiPhi = this;
		}
		
		private void detach_CTDTs(CTDT entity)
		{
			this.SendPropertyChanging();
			entity.ChiPhi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fac")]
	public partial class Fac : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDFac;
		
		private string _Name;
		
		private System.Nullable<bool> _Status;
		
		private EntitySet<Line> _Lines;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDFacChanging(string value);
    partial void OnIDFacChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    #endregion
		
		public Fac()
		{
			this._Lines = new EntitySet<Line>(new Action<Line>(this.attach_Lines), new Action<Line>(this.detach_Lines));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFac", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDFac
		{
			get
			{
				return this._IDFac;
			}
			set
			{
				if ((this._IDFac != value))
				{
					this.OnIDFacChanging(value);
					this.SendPropertyChanging();
					this._IDFac = value;
					this.SendPropertyChanged("IDFac");
					this.OnIDFacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(20)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fac_Line", Storage="_Lines", ThisKey="IDFac", OtherKey="IDFace")]
		public EntitySet<Line> Lines
		{
			get
			{
				return this._Lines;
			}
			set
			{
				this._Lines.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Lines(Line entity)
		{
			this.SendPropertyChanging();
			entity.Fac = this;
		}
		
		private void detach_Lines(Line entity)
		{
			this.SendPropertyChanging();
			entity.Fac = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Line")]
	public partial class Line : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDLine;
		
		private string _Name;
		
		private string _IDFace;
		
		private System.Nullable<bool> _Status;
		
		private EntitySet<Style> _Styles;
		
		private EntitySet<ChiPhi> _ChiPhis;
		
		private EntityRef<Fac> _Fac;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDLineChanging(string value);
    partial void OnIDLineChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIDFaceChanging(string value);
    partial void OnIDFaceChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    #endregion
		
		public Line()
		{
			this._Styles = new EntitySet<Style>(new Action<Style>(this.attach_Styles), new Action<Style>(this.detach_Styles));
			this._ChiPhis = new EntitySet<ChiPhi>(new Action<ChiPhi>(this.attach_ChiPhis), new Action<ChiPhi>(this.detach_ChiPhis));
			this._Fac = default(EntityRef<Fac>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLine", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDLine
		{
			get
			{
				return this._IDLine;
			}
			set
			{
				if ((this._IDLine != value))
				{
					this.OnIDLineChanging(value);
					this.SendPropertyChanging();
					this._IDLine = value;
					this.SendPropertyChanged("IDLine");
					this.OnIDLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(20)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFace", DbType="VarChar(10)")]
		public string IDFace
		{
			get
			{
				return this._IDFace;
			}
			set
			{
				if ((this._IDFace != value))
				{
					if (this._Fac.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDFaceChanging(value);
					this.SendPropertyChanging();
					this._IDFace = value;
					this.SendPropertyChanged("IDFace");
					this.OnIDFaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Line_Style", Storage="_Styles", ThisKey="IDLine", OtherKey="IDLine")]
		public EntitySet<Style> Styles
		{
			get
			{
				return this._Styles;
			}
			set
			{
				this._Styles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Line_ChiPhi", Storage="_ChiPhis", ThisKey="IDLine", OtherKey="IDLine")]
		public EntitySet<ChiPhi> ChiPhis
		{
			get
			{
				return this._ChiPhis;
			}
			set
			{
				this._ChiPhis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fac_Line", Storage="_Fac", ThisKey="IDFace", OtherKey="IDFac", IsForeignKey=true)]
		public Fac Fac
		{
			get
			{
				return this._Fac.Entity;
			}
			set
			{
				Fac previousValue = this._Fac.Entity;
				if (((previousValue != value) 
							|| (this._Fac.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Fac.Entity = null;
						previousValue.Lines.Remove(this);
					}
					this._Fac.Entity = value;
					if ((value != null))
					{
						value.Lines.Add(this);
						this._IDFace = value.IDFac;
					}
					else
					{
						this._IDFace = default(string);
					}
					this.SendPropertyChanged("Fac");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Styles(Style entity)
		{
			this.SendPropertyChanging();
			entity.Line = this;
		}
		
		private void detach_Styles(Style entity)
		{
			this.SendPropertyChanging();
			entity.Line = null;
		}
		
		private void attach_ChiPhis(ChiPhi entity)
		{
			this.SendPropertyChanging();
			entity.Line = this;
		}
		
		private void detach_ChiPhis(ChiPhi entity)
		{
			this.SendPropertyChanging();
			entity.Line = null;
		}
	}
}
#pragma warning restore 1591
